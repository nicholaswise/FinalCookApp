@model IEnumerable<CookingSite.Models.Term>
@using Microsoft.AspNet.Identity;
@*The following script receives an item id and the current user id from
    the system, creats a JSON object and passes the object to 
    the SetFav() method in the TermsController*@
<script>
    var userInput1 = " ";
    var aspId;
    function AssignButtonClicked(elem) {
        userInput1 = $(elem).data('assigned-id');
        aspId = "@HttpContext.Current.User.Identity.GetUserId()";
    };
    $(document).ready(function () {
        $('.SetFavBtn').click(function () {
            $(this).hide()
            var postFile = {
                userInput1: userInput1,
                aspId: aspId
            }
            var postFile1 = {
                aspId: aspId
            }
            $.ajax({
                type: 'POST',
                url: "@Url.Action("SavFav")",
                data: JSON.stringify(postFile),
                contentType: "application/json; charset=utf-8",
                success: function (data) {  },
                error: function () {
                    alert("error saving input");
                }
            });
        });
    });
</script>

@*This script will show favorited item if the user in logged in and hide if not*@

<script>
    var aspName = "@HttpContext.Current.User.Identity.GetUserName()";

    $(function () {

        if (aspName != "") {

            $('.SetFav').show()
        } else {
            $('.SetFav').hide()
        }
    });
</script>

@*This scrpt calls the MakeFalse() method in the terms controller upon onload
    ans sets the IsMached items to false;*@
<script>
 
    var postFile = {
        userInput1: userInput1,
        aspId: aspId
    }
    $.ajax({
        type: 'POST',
        url: "@Url.Action("MakeFalse")",
        data: JSON.stringify(postFile),
        contentType: "application/json; charset=utf-8",
        success: function (data) { },
        error: function () {
        }
    });
</script>


@*FIND TERMS Button*@
<div class="container">
    <a href="~/Terms/Index" id="sendFile" class="waves-effect waves-light btn btn-large"><i class="material-icons right">search</i>Search New Recipe</a>
</div>

<div class="row container2">
    @foreach (var item in Model)
    {
        if (item.IsMatch.Equals(true))
        {
            <div class="col s8 m4 card1">
                <div class="card">
                    <div class="card-image">
                        <img class="picSize" src="@Html.DisplayFor(modelItem => item.TermPicture)">
                        <span class="card-title">@Html.DisplayFor(modelItem => item.TermName)</span>
                        <div class="SetFav login">
                            @*The following statment compares the current ItemID to a list generated in the Index method in 
                                the Favorites controller. If the item is contained in the Favorties table in the database,
                                the add favorites button is set to red. If not the add favorites button is set to green. If set to green,
                                once selected the add favorites button will turn to red. *@
                            @if (ViewBag.Favorites.Contains(item.TermID))
                            {
                                <span class="tooltiptext">Already Added</span>
                                <a class="btn btn-floating halfway-fab waves-effect waves-light red "></a>

                            }
                            else
                            {
                                <span class="tooltiptext red">Already Added</span>
                                <a class="btn btn-floating halfway-fab waves-effect waves-light red "></a>
                                <span class="tooltiptext">Add To Favorites</span>
                                <a class="btn btn-floating halfway-fab waves-effect waves-light green SetFavBtn faved1" onclick="AssignButtonClicked(this)" data-assigned-id="@item.TermID"><i class="material-icons SetFav">add</i>></a>

                            }

                        </div>
                    </div>
                    <div class="card-content">
                        <p>
                            @Html.DisplayFor(modelItem => item.TermDef)
                        </p>
                    </div>
                    <div class="card-action">
                        @Html.ActionLink("Details", "Details", new { id = item.TermID })
                    </div>
                </div>
            </div>
        }
    }
</div>